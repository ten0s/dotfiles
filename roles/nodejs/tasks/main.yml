---
- name: Set vars
  set_fact:
    nodejs_ver: v20.15.0

#
# https://github.com/nvm-sh/nvm
# https://github.com/nvm-sh/nvm#git-install
#

- name: Pull NVM
  git: repo=https://github.com/nvm-sh/nvm.git
       dest=/home/{{user}}/.nvm
       version=v0.39.7

- name: Copy bashrc config
  copy: src=01-bashrc-nvm
        dest=/home/{{user}}/.bashrc.d/10-bashrc-nvm

#
# $ nvm ls-remote --lts
# $ nvm ls
# $ nvm alias default VERSION
# $ nvm use VERSION
#

- name: Install new Node.js
  shell: |
    source /home/{{user}}/.bashrc
    nvm install {{item}}
  args:
    creates: "/home/{{user}}/.nvm/versions/node/{{item}}/bin"
    executable: /bin/bash
  with_items:
  - v18.14.1
  - v20.15.0
  - v20.19.3

- name: Set default Node.js
  shell: |
    source /home/{{user}}/.bashrc
    nvm alias default {{nodejs_ver}}
  args:
    executable: /bin/bash

- name: Uninstall old Node.js
  shell: |
    source /home/{{user}}/.bashrc
    nvm uninstall {{item}}
  args:
    executable: /bin/bash
  with_items:
  - v16.19.0
  - v18.12.0
  - v18.12.1

- name: Update NPM package
  npm:
    name: "npm"
    global: true
    state: latest
    executable: "/home/{{user}}/.nvm/versions/node/{{nodejs_ver}}/bin/npm"

#
# sudo npm install --global <PACKAGE>@<VERSION>
# sudo is not needed under NVM
#

- name: Install NPM global packages
  npm:
    name: "{{item.name}}"
    version: "{{item.version}}"
    global: true
    state: latest
    executable: "/home/{{user}}/.nvm/versions/node/{{nodejs_ver}}/bin/npm"
  with_items:
  - {name: "nodemon", version: "3.1.4"}
  - {name: "yarn", version: "1.22.10"}
